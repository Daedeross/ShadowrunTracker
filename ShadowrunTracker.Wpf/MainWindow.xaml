<mah:MetroWindow x:Class="ShadowrunTracker.Wpf.MainWindow"
                 x:Name="RootWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:rxui="http://reactiveui.net"
                 xmlns:helpers="clr-namespace:ShadowrunTracker.Wpf.Helpers"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:local="clr-namespace:ShadowrunTracker.Wpf.Views"
                 TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 TextElement.FontWeight="Regular"
                 TextElement.FontSize="13"
                 TextOptions.TextFormattingMode="Ideal"
                 TextOptions.TextRenderingMode="Auto"
                 Background="{DynamicResource MaterialDesignPaper}"
                 FontFamily="{DynamicResource MaterialDesignFont}"
                 RightWindowCommandsOverlayBehavior="Never"
                 WindowTitleBrush="{DynamicResource PrimaryHueDarkBrush}"
                 WindowStartupLocation="CenterOwner"
                 mc:Ignorable="d"
                 Closed="RootWindow_Closed"
                 DpiChanged="RootWindow_DpiChanged"
                 Title="Shadowrun Tracker 5e" Height="675" Width="1200">
    <mah:MetroWindow.Resources>
        <DataTemplate DataType="vmi:IRequestInitiativesViewModel">
            <local:RequestInitiativesView DataContext="{Binding}" />
        </DataTemplate>
        <Storyboard x:Key="MakeObjectHiddenAfterDelay">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                           Duration="0"
                                           BeginTime="0:0:0.3">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Hidden}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MakeObjectVisibleImmediately">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                           Duration="0"
                                           BeginTime="0:0:0">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </mah:MetroWindow.Resources>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button Name="NewEncounterButton"
                    Command="{Binding NewEncounter}">Start Local</Button>
            <Button x:Name="StartSessionButton">Start Remote</Button>
            <Button x:Name="ConnectToSessionButton">Join Remote</Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <materialDesign:DialogHost Name="WindowDialogHost"
                               DialogTheme="Inherit"
                               DialogMargin="30">
        <materialDesign:DialogHost.DialogContentTemplateSelector>
            <helpers:DialogTemplateSelector>
                <helpers:DialogTemplateSelector.ConfirmTemplate>
                    <DataTemplate >
                        <StackPanel Margin="16">
                            <TextBlock Text="{Binding}"
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       Style="{StaticResource MaterialDesignHeadline6TextBlock}" />
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Right">
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsDefault="True"
                                        Margin="0 8 8 0"
                                        Content="CONFIRM"
                                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                                    <Button.CommandParameter>
                                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                            True
                                        </system:Boolean>
                                    </Button.CommandParameter>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsCancel="True"
                                        Margin="0 8 8 0"
                                        Content="CANCEL"
                                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                                    <Button.CommandParameter>
                                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                            False
                                        </system:Boolean>
                                    </Button.CommandParameter>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </helpers:DialogTemplateSelector.ConfirmTemplate>
                <helpers:DialogTemplateSelector.HostTemplate>
                    <DataTemplate>
                        <rxui:ViewModelViewHost Name="WindowDialogContent"
                                        Margin="20"
                                        HorizontalAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        ViewModel="{Binding}" >
                        </rxui:ViewModelViewHost>
                    </DataTemplate>
                </helpers:DialogTemplateSelector.HostTemplate>
            </helpers:DialogTemplateSelector>
        </materialDesign:DialogHost.DialogContentTemplateSelector>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <materialDesign:DrawerHost Grid.Row="1" Name="EncounterDrawerHost"
                                       OpenMode="Modal"
                                       BorderBrush="{DynamicResource MaterialDesignDivider}"
                                       BottomDrawerCloseOnClickAway="True"
                                       BottomDrawerCornerRadius="20 20 0 0"
                                       >
                <materialDesign:DrawerHost.Style>
                    <Style TargetType="materialDesign:DrawerHost"
                           BasedOn="{StaticResource {x:Type materialDesign:DrawerHost}}">
                        <Setter Property="OverlayBackground"
                                Value="{DynamicResource PrimaryHueLightBrush}" />
                    </Style>
                </materialDesign:DrawerHost.Style>
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <Border>
                        <Grid >
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLeftDrawerOpen, RelativeSource={RelativeSource AncestorType=materialDesign:DrawerHost}, FallbackValue=False}"
                                             Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Name="StartAction" Storyboard="{StaticResource MakeObjectVisibleImmediately}" />
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Name="EndAction" Storyboard="{StaticResource MakeObjectHiddenAfterDelay}" />
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <rxui:ViewModelViewHost Name="LeftDrawerContent"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch"
                                                    />
                        </Grid>
                    </Border>
                </materialDesign:DrawerHost.LeftDrawerContent>
                <materialDesign:DrawerHost.BottomDrawerContent>
                    <Grid HorizontalAlignment="Center" Margin="1" Background="{DynamicResource MaterialDesignPaper}">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsBottomDrawerOpen, RelativeSource={RelativeSource AncestorType=materialDesign:DrawerHost}}"
                                                 Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Name="StartAction" Storyboard="{StaticResource MakeObjectVisibleImmediately}" />
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Name="EndAction" Storyboard="{StaticResource MakeObjectHiddenAfterDelay}" />
                                        </DataTrigger.ExitActions>
                                        <!--<Setter Property="Visibility" Value="Visible" />-->
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <rxui:ViewModelViewHost Name="BottomDrawerContent"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Stretch"
                                                HorizontalContentAlignment="Center"
                                                VerticalContentAlignment="Stretch"
                                                />  
                        <Border Height="100" />
                        <!--<ToggleButton Name="CloseDrawer"
                              VerticalAlignment="Top"
                              HorizontalAlignment="Right"
                              Grid.Row="0"
                              ToolTip="Cancel"
                              Width="42" Height="42"
                              IsChecked="{Binding IsBottomDrawerOpen, RelativeSource={RelativeSource AncestorType=materialDesign:DrawerHost}}"
                              Content="{materialDesign:PackIcon Kind=Plus, Size=22}"
                              materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Cancel, Size=22}"
                              >
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignActionAccentToggleButton}">
                            <Setter Property="Margin" Value="0 -50 8 0" />
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>-->
                    </Grid>
                </materialDesign:DrawerHost.BottomDrawerContent>
                <rxui:ViewModelViewHost Name="EncounterHost"
                                        VerticalAlignment="Stretch"
                                        HorizontalAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        ViewModel="{Binding CurrentEncounter}" >
                </rxui:ViewModelViewHost>
            </materialDesign:DrawerHost>
        </Grid>
    </materialDesign:DialogHost>
</mah:MetroWindow>

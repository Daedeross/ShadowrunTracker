<rxui:ReactiveUserControl x:Class="ShadowrunTracker.Wpf.Views.NewParticipantView"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          x:TypeArguments="vmi:INewCharacterViewModel"
                          xmlns:vmi="clr-namespace:ShadowrunTracker.ViewModels;assembly=ShadowrunTracker.Contract"                          
                          xmlns:sys="clr-namespace:System;assembly=mscorlib"
                          xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
                          xmlns:rxui="http://reactiveui.net"
                          xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                          xmlns:mui="http://schemas.modernwpf.com/2019"
                          xmlns:v="clr-namespace:ShadowrunTracker.Wpf.Views"
                          xmlns:vm="clr-namespace:ShadowrunTracker.ViewModels;assembly=ShadowrunTracker.ViewModels"
                          xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                          mc:Ignorable="d" 
                          d:DataContext="{d:DesignInstance Type=vm:NewCharacterViewModel, IsDesignTimeCreatable=False}"
                          d:DesignHeight="350" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type mah:NumericUpDown}">
            <Setter Property="Minimum" Value="1" />
            <Setter Property="Margin" Value="8 2" />
            <EventSetter Event="GotKeyboardFocus" Handler="OnNumericKeyboardFocus" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <x:Array x:Key="PainResistenceList" Type="sys:Int32">
            <sys:Int32>-1</sys:Int32>
            <sys:Int32>0</sys:Int32>
            <sys:Int32>1</sys:Int32>
            <sys:Int32>2</sys:Int32>
            <sys:Int32>3</sys:Int32>
        </x:Array>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Margin="2" Padding="3" BorderThickness="1" BorderBrush="Black" DataContext="{Binding Character}">
            <mui:SimpleStackPanel Orientation="Horizontal" Spacing="8" FlowDirection="LeftToRight">
                <Label FontWeight="Bold">Alias</Label>
                <TextBox Text="{Binding Alias}" MinWidth="150"
                         materialDesign:HintAssist.Hint="Character Name"
                         Style="{DynamicResource MaterialDesignFloatingHintTextBox}"/>
                <Label FontWeight="Bold">Edge</Label>
                <mah:NumericUpDown Value="{Binding BaseEdge}" Minimum="1" />
                <Separator Width="2" VerticalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" />
                <ToggleButton Name="isPlayerCheck" 
                              HorizontalAlignment="Right"
                              Style="{StaticResource MaterialDesignSwitchToggleButton}"
                              IsChecked="{Binding IsPlayer}"></ToggleButton>
                <StackPanel Orientation="Horizontal"
                            IsEnabled="{Binding IsPlayer}">
                    <Label FontWeight="Bold" HorizontalAlignment="Right" >Player</Label>
                    <TextBox MinWidth="150" Text="{Binding Player}"
                             Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                             materialDesign:HintAssist.Hint="Player Name">
                    </TextBox>
                </StackPanel>
                <Label Target="{Binding ElementName=PainResistenceCombo}">Pain Tol.</Label>
                <ComboBox x:Name="PainResistenceCombo"
                          MinWidth="32"
                          HorizontalContentAlignment="Right"
                          SelectedItem="{Binding PainResistence}"
                          ItemsSource="{StaticResource PainResistenceList}" />
                <CheckBox IsChecked="{Binding PainEditor}">Pain Editor</CheckBox>
            </mui:SimpleStackPanel>
        </Border>
        <Grid Grid.Row="1" Margin="2" DataContext="{Binding Character}">
            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition  />
                <RowDefinition  />
            </Grid.RowDefinitions>
            <Label Grid.Column="0" Grid.Row="0" >Body</Label>
            <mah:NumericUpDown Grid.Column="0" Grid.Row="1" Value="{Binding BaseBody}" ></mah:NumericUpDown>

            <Label Grid.Column="1" Grid.Row="0" >Agility</Label>
            <mah:NumericUpDown Grid.Column="1" Grid.Row="1" Value="{Binding BaseAgility}" ></mah:NumericUpDown>

            <Label Grid.Column="2" Grid.Row="0" >Reaction</Label>
            <mah:NumericUpDown Grid.Column="2" Grid.Row="1" Value="{Binding BaseReaction}" ></mah:NumericUpDown>

            <Label Grid.Column="3" Grid.Row="0" >Strength</Label>
            <mah:NumericUpDown Grid.Column="3" Grid.Row="1" Value="{Binding BaseStrength}" ></mah:NumericUpDown>

            <Label Grid.Column="4" Grid.Row="0" >Charisma</Label>
            <mah:NumericUpDown Grid.Column="4" Grid.Row="1" Value="{Binding BaseCharisma}" ></mah:NumericUpDown>

            <Label Grid.Column="5" Grid.Row="0" >Intuition</Label>
            <mah:NumericUpDown Grid.Column="5" Grid.Row="1" Value="{Binding BaseIntuition}" ></mah:NumericUpDown>

            <Label Grid.Column="6" Grid.Row="0" >Logic</Label>
            <mah:NumericUpDown Grid.Column="6" Grid.Row="1" Value="{Binding BaseLogic}" ></mah:NumericUpDown>

            <Label Grid.Column="7" Grid.Row="0" >Willpower</Label>
            <mah:NumericUpDown Grid.Column="7" Grid.Row="1" Value="{Binding BaseWillpower}" ></mah:NumericUpDown>
        </Grid>
        <ListBox ItemsSource="{Binding Initiatives}" Grid.Row="2" >
            <ListBox.Style>
                <Style TargetType="ListBox" >
                    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
                </Style>
            </ListBox.Style>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="materialDesign:ListBoxItemAssist.ShowSelection" Value="False"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <v:InitiativeScoreEntryView IsTabStop="False" DataContext="{Binding}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Grid Grid.Row="3">
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5,5,10,5" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="Width" Value="64" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Button x:Name="cancelButton" Grid.Column="1"
                    Margin="8 5"
                    Width="76"
                    IsCancel="True"
                    Style="{StaticResource MaterialDesignPaperButton}"
                    Command="{Binding CancelCommand}">Cancel</Button>
            <Button x:Name="okButton" Grid.Column="2"
                    Margin="8 5"
                    Width="76"
                    IsDefault="True"
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    Command="{Binding OkCommand}">Create</Button>
        </Grid>
    </Grid>
</rxui:ReactiveUserControl>

<rxui:ReactiveUserControl x:Class="ShadowrunTracker.Wpf.Views.EncounterView"
                          x:TypeArguments="vmi:IEncounterViewModel"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                          xmlns:vmi="clr-namespace:ShadowrunTracker.ViewModels;assembly=ShadowrunTracker.Contract"
                          xmlns:vm="clr-namespace:ShadowrunTracker.ViewModels;assembly=ShadowrunTracker.ViewModels"
                          xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
                          xmlns:rxui="http://reactiveui.net"
                          xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                          xmlns:local="clr-namespace:ShadowrunTracker.Wpf.Views"
                          xmlns:mock="clr-namespace:ShadowrunTracker.Mock;assembly=ShadowrunTracker.Mock"
                          mc:Ignorable="d"
                          d:DataContext="{d:DesignInstance Type={x:Type mock:MockEncounterViewModel}, IsDesignTimeCreatable=True}"
                          d:DesignHeight="650" d:DesignWidth="900" >
    <UserControl.Resources>
        <Storyboard x:Key="MakeObjectHiddenAfterDelay">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                           Duration="0"
                                           BeginTime="0:0:0.3">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Hidden}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MakeObjectVisibleImmediately">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                           Duration="0"
                                           BeginTime="0:0:0">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <materialDesign:DrawerHost Name="EncounterDrawerHost"
                               OpenMode="Modal"
                               BorderBrush="{DynamicResource MaterialDesignDivider}"
                               BottomDrawerCloseOnClickAway="True"
                               BottomDrawerCornerRadius="20 20 0 0"
                               >
        <materialDesign:DrawerHost.Style>
            <Style TargetType="materialDesign:DrawerHost"
                   BasedOn="{StaticResource {x:Type materialDesign:DrawerHost}}">
                <Setter Property="OverlayBackground"
                        Value="{DynamicResource PrimaryHueLightBrush}" />
            </Style>
        </materialDesign:DrawerHost.Style>
        <materialDesign:DrawerHost.LeftDrawerContent>
            <Border>
            <Grid >
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLeftDrawerOpen, RelativeSource={RelativeSource AncestorType=materialDesign:DrawerHost}}"
                                        Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Name="StartAction" Storyboard="{StaticResource MakeObjectVisibleImmediately}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Name="EndAction" Storyboard="{StaticResource MakeObjectHiddenAfterDelay}" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <rxui:ViewModelViewHost Name="LeftDrawer"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        />
            </Grid>
            </Border>
        </materialDesign:DrawerHost.LeftDrawerContent>
        <materialDesign:DrawerHost.BottomDrawerContent>
            <Grid HorizontalAlignment="Center" Margin="1" Background="{DynamicResource MaterialDesignPaper}">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBottomDrawerOpen, RelativeSource={RelativeSource AncestorType=materialDesign:DrawerHost}}"
                                        Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Name="StartAction" Storyboard="{StaticResource MakeObjectVisibleImmediately}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Name="EndAction" Storyboard="{StaticResource MakeObjectHiddenAfterDelay}" />
                                </DataTrigger.ExitActions>
                                <!--<Setter Property="Visibility" Value="Visible" />-->
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <rxui:ViewModelViewHost Name="BottomDrawerContent"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Stretch"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Stretch"
                                        />
                <Border Height="100" />
                <!--<ToggleButton Name="CloseDrawer"
                              VerticalAlignment="Top"
                              HorizontalAlignment="Right"
                              Grid.Row="0"
                              ToolTip="Cancel"
                              Width="42" Height="42"
                              IsChecked="{Binding IsBottomDrawerOpen, RelativeSource={RelativeSource AncestorType=materialDesign:DrawerHost}}"
                              Content="{materialDesign:PackIcon Kind=Plus, Size=22}"
                              materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Cancel, Size=22}"
                              >
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignActionAccentToggleButton}">
                            <Setter Property="Margin" Value="0 -50 8 0" />
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>-->
            </Grid>
        </materialDesign:DrawerHost.BottomDrawerContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <rxui:ViewModelViewHost Name="CurrentRoundHost"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Grid.Row="1"
                                    />
            <Expander HorizontalAlignment="Stretch"
                      materialDesign:ExpanderAssist.HeaderBackground="{DynamicResource PrimaryHueMidBrush}"
                      ExpandDirection="Down"
                      Grid.Row="0">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock HorizontalAlignment="Center">Overview</TextBlock>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <Border BorderThickness="0 0 0 2" BorderBrush="{DynamicResource PrimaryHueLightBrush}" Background="{DynamicResource MaterialDesignChipBackground}">
                    <Grid>
                        <ListBox Name="ParticipantsList"
                                 HorizontalContentAlignment="Stretch"
                                 Grid.IsSharedSizeScope="True">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                                    <!--<Setter Property="HorizontalContentAlignment" Value="Stretch" />-->
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>
                </Border>
            </Expander>
            <ToggleButton Name="NewParticipantButton"
                          VerticalAlignment="Bottom"
                          HorizontalAlignment="Right"
                          Grid.Row="1"
                          Width="42" Height="42"
                          ToolTip="Add Parcicipant"
                          Content="{materialDesign:PackIcon Kind=Plus, Size=22}">
                      <!--materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Cancel, Size=22}"
                          >-->
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignActionAccentToggleButton}">
                        <Setter Property="Margin" Value="0 0 8 8" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBottomDrawerOpen, RelativeSource={RelativeSource AncestorType=materialDesign:DrawerHost}}"
                                         Value="True">
                                <!--<DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames>
                                                
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>-->
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsBottomDrawerOpen, RelativeSource={RelativeSource AncestorType=materialDesign:DrawerHost}}"
                                         Value="False">
                                <Setter Property="IsChecked" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Button Name="NewRoundButton"
                    Grid.Row="1"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Left"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    Margin="8 0 0 8"
                    Style="{StaticResource MaterialDesignRaisedLightButton}">
                Next Round
            </Button>
        </Grid>
    </materialDesign:DrawerHost>
</rxui:ReactiveUserControl>
